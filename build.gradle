import java.util.stream.Collectors

plugins {
    id "maven-publish"
    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "org.jetbrains.kotlin.jvm" version "1.6.10"
}

group "gg.scala.aware"
version "1.0.6"

repositories {
    mavenCentral()
    mavenLocal()

    maven {
        name "Scala"
        allowInsecureProtocol true
        url "http://repository.scala.gg/repository/maven-releases/"

        credentials {
            username property("scala.credentials.username") as String
            password property("scala.credentials.password") as String
        }
    }
}

dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib:1.6.10"
    api 'com.google.code.gson:gson:2.9.0'

    implementation 'com.github.ben-manes.caffeine:caffeine:2.9.3'
    api 'io.lettuce:lettuce-core:6.1.8.RELEASE'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

compileKotlin {
    kotlinOptions.javaParameters = true
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    archiveClassifier.set("")

    exclude "**/*.kotlin_metadata"
    exclude "**/*.kotlin_builtins"
    exclude "META-INF/"

    archiveFileName = "aware.jar"
}

tasks.withType(GenerateMavenPom).all {
    doLast {
        final File file = new File(
                "$buildDir/publications/shadow/pom-default.xml"
        )

        final BufferedReader br = new BufferedReader(
                new FileReader(file)

        )
        final String lines = br.lines()
                .map((line) -> {
                    if (line.contains("<dependencies/>")) "" else line
                })
                .collect(Collectors.joining("\n"))

        final BufferedWriter wr = new BufferedWriter(
                new FileWriter(file, true)
        )

        final PrintWriter writer = new PrintWriter(file)
        writer.print("")
        writer.close()

        wr.write(lines)
        wr.close()
    }
}

String usernameValue = null

try {
    usernameValue = property("scala.credentials.username")
} catch (Exception ignored)
{

}

publishing {
    publications {
        shadow(MavenPublication) { publication ->
            from components.kotlin
        }
    }

    // yes, you're an internal scala developer
    if (usernameValue != null)
    {
        repositories {
            maven {
                name "Scala"
                allowInsecureProtocol true
                url "http://repository.scala.gg/repository/maven-releases/"

                credentials {
                    username usernameValue
                    password property("scala.credentials.password") as String
                }
            }
        }
    }
}

tasks.build.dependsOn(shadowJar)

if (usernameValue != null)
{
    tasks.build.dependsOn(publishShadowPublicationToScalaRepository)
}
